# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install Poetry
      uses: snok/install-poetry@v1.4.1
    - name: Export dependencies
      run: poetry export -f requirements.txt --output requirements.txt
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Start keycloak docker container
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: "./backend/docker-compose.yml"
        services: "keycloak"
        up-flags: "-d"
    - name: Wait for Keycloak to be ready
      run: |
        until curl -s http://localhost:9000/health/setup; do
          echo "Waiting for Keycloak..."
          sleep 5
        done
    - name: Keycloak logs
      run: docker logs keycloak_hardware_management
    - name: Test with pytest and keycloak test container
      working-directory: ./backend/tests
      run: |
        pytest

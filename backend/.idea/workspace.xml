<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="fed26605-5ee1-4667-8838-7a64ce6bbcc0" name="Changes" comment="Converted booking tests to test containers completely">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/api_bookings.py" beforeDir="false" afterPath="$PROJECT_DIR$/api/api_bookings.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/api_hardware.py" beforeDir="false" afterPath="$PROJECT_DIR$/api/api_hardware.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/api_users.py" beforeDir="false" afterPath="$PROJECT_DIR$/api/api_users.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/constants.py" beforeDir="false" afterPath="$PROJECT_DIR$/api/constants.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app.py" beforeDir="false" afterPath="$PROJECT_DIR$/app.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db/bookings_db.py" beforeDir="false" afterPath="$PROJECT_DIR$/db/bookings_db.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/poetry.lock" beforeDir="false" afterPath="$PROJECT_DIR$/poetry.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pyproject.toml" beforeDir="false" afterPath="$PROJECT_DIR$/pyproject.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/api/test_booking_api.py" beforeDir="false" afterPath="$PROJECT_DIR$/tests/api/test_booking_api.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/conftest.py" beforeDir="false" afterPath="$PROJECT_DIR$/tests/conftest.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/util/fixtures.py" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$/.." value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2klxcP95qqkqMbRmECqihrzwK6A" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Python tests.Python tests for api.test_booking_api.TestBookingApi.executor": "Run",
    "Python tests.Python tests for api.test_booking_api.TestBookingApi.test_create_booking (1).executor": "Run",
    "Python tests.Python tests for api.test_booking_api.TestBookingApi.test_create_booking.executor": "Run",
    "Python tests.Python tests for api.test_booking_api.TestBookingApi.test_create_booking_with_missing_booking_name.executor": "Run",
    "Python tests.Python tests for api.test_booking_api.TestBookingApi.test_get_all_bookings_with_bookings.executor": "Run",
    "Python tests.Python tests for api.test_booking_api.TestBookingApi.test_get_all_bookings_without_bookings.executor": "Run",
    "Python tests.Python tests for api.test_booking_api.TestBookingApi.test_update_booking.executor": "Run",
    "Python tests.Python tests in test_booking_api.py.executor": "Debug",
    "Python tests.Python tests in tests.executor": "Run",
    "Python tests.pytest for tests.api.test_booking_api.TestBookingApi.test_create_booking.executor": "Run",
    "Python tests.pytest for tests.api.test_booking_api.TestBookingApi.test_get_all_bookings_without_bookings.executor": "Debug",
    "Python tests.pytest for tests.api.test_booking_api.TestBookingApi.test_get_booking_by_id.executor": "Run",
    "Python tests.pytest for tests.api.test_booking_api.TestBookingApi.test_update_missing_booking.executor": "Run",
    "Python.api_bookings.executor": "Debug",
    "Python.app.executor": "Run",
    "RunOnceActivity.OpenDatabaseViewOnStart": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "feature/flask-backend",
    "last_opened_file_path": "/Users/doctor/Developer/hardware-management/backend",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/util" />
    </key>
  </component>
  <component name="RunManager" selected="Python tests.Python tests in test_booking_api.py">
    <configuration name="Python tests for api.test_booking_api.TestBookingApi.test_create_booking" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;api.test_booking_api.TestBookingApi.test_create_booking&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for api.test_booking_api.TestBookingApi.test_create_booking_with_missing_booking_name" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;api.test_booking_api.TestBookingApi.test_create_booking_with_missing_booking_name&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for api.test_booking_api.TestBookingApi.test_update_booking" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;api.test_booking_api.TestBookingApi.test_update_booking&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests in test_booking_api.py" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/tests/api/test_booking_api.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for tests.api.test_booking_api.TestBookingApi.test_create_booking" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="$USER_HOME$/Library/Caches/pypoetry/virtualenvs/backend-e12yz9jr-py3.12/bin/python" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;tests.api.test_booking_api.TestBookingApi.test_create_booking&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for tests.api.test_booking_api.TestBookingApi.test_get_booking_by_id" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="$USER_HOME$/Library/Caches/pypoetry/virtualenvs/backend-e12yz9jr-py3.12/bin/python" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;tests.api.test_booking_api.TestBookingApi.test_get_booking_by_id&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Python tests.Python tests for api.test_booking_api.TestBookingApi.test_create_booking_with_missing_booking_name" />
      <item itemvalue="Python tests.Python tests for api.test_booking_api.TestBookingApi.test_update_booking" />
      <item itemvalue="Python tests.Python tests in test_booking_api.py" />
      <item itemvalue="Python tests.pytest for tests.api.test_booking_api.TestBookingApi.test_create_booking" />
      <item itemvalue="Python tests.pytest for tests.api.test_booking_api.TestBookingApi.test_get_booking_by_id" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests in test_booking_api.py" />
        <item itemvalue="Python tests.Python tests for api.test_booking_api.TestBookingApi.test_update_booking" />
        <item itemvalue="Python tests.Python tests for api.test_booking_api.TestBookingApi.test_create_booking_with_missing_booking_name" />
        <item itemvalue="Python tests.pytest for tests.api.test_booking_api.TestBookingApi.test_create_booking" />
        <item itemvalue="Python tests.pytest for tests.api.test_booking_api.TestBookingApi.test_get_booking_by_id" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-410509235cf1-JavaScript-PY-242.20224.347" />
        <option value="bundled-python-sdk-c2d6afa66fbe-39cff9de6eef-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.20224.347" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="fed26605-5ee1-4667-8838-7a64ce6bbcc0" name="Changes" comment="" />
      <created>1723872042806</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1723872042806</updated>
      <workItem from="1724255858141" duration="4573000" />
    </task>
    <task id="LOCAL-00001" summary="Added reqeust models">
      <option name="closed" value="true" />
      <created>1723875807992</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1723875807992</updated>
    </task>
    <task id="LOCAL-00002" summary="Did some fine test adjustments">
      <option name="closed" value="true" />
      <created>1723876608369</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1723876608369</updated>
    </task>
    <task id="LOCAL-00003" summary="Converted booking tests to test containers completely">
      <option name="closed" value="true" />
      <created>1724262922882</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1724262922882</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Added reqeust models" />
    <MESSAGE value="Did some fine test adjustments" />
    <MESSAGE value="Converted booking tests to test containers completely" />
    <option name="LAST_COMMIT_MESSAGE" value="Converted booking tests to test containers completely" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$USER_HOME$/Library/Caches/pypoetry/virtualenvs/backend-e12yz9jr-py3.12/lib/python3.12/site-packages/flask/json/__init__.py</url>
          <line>169</line>
          <option name="timeStamp" value="24" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$USER_HOME$/Library/Caches/pypoetry/virtualenvs/backend-e12yz9jr-py3.12/lib/python3.12/site-packages/flask/json/provider.py</url>
          <line>204</line>
          <option name="timeStamp" value="26" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/tests/api/test_booking_api.py</url>
          <line>113</line>
          <option name="timeStamp" value="29" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/backend$api_bookings.coverage" NAME="api_bookings Coverage Results" MODIFIED="1724258113252" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/api" />
    <SUITE FILE_PATH="coverage/backend$pytest_for_tests_api_test_booking_api_TestBookingApi_test_get_all_bookings_without_bookings.coverage" NAME="pytest for tests.api.test_booking_api.TestBookingApi.test_get_all_bookings_without_bookings Coverage Results" MODIFIED="1724867060947" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/backend$.coverage" NAME=" Coverage Results" MODIFIED="1724869011546" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/backend$pytest_for_tests_api_test_booking_api_TestBookingApi_test_update_missing_booking.coverage" NAME="pytest for tests.api.test_booking_api.TestBookingApi.test_update_missing_booking Coverage Results" MODIFIED="1724262614835" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/backend$app.coverage" NAME="app Coverage Results" MODIFIED="1724862905640" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/backend$pytest_for_tests_api_test_booking_api_TestBookingApi_test_get_booking_by_id.coverage" NAME="pytest for tests.api.test_booking_api.TestBookingApi.test_get_booking_by_id Coverage Results" MODIFIED="1724868073832" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/backend$pytest_for_tests_api_test_booking_api_TestBookingApi_test_create_booking.coverage" NAME="pytest for tests.api.test_booking_api.TestBookingApi.test_create_booking Coverage Results" MODIFIED="1724868596656" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
  </component>
</project>